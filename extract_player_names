#!/bin/bash

# Change the directory to the log folder
cd /home/mcserver/minecraft/logs

# Initialize an associative array to store player names and their occurrence counts
declare -A player_counts
declare -A player_timestamps

# Loop through each .gz file in the directory
for file in *.gz; do
    # Use zgrep to search for player names and count their occurrences
    # The regular expression ' joined the game' will match lines with player names followed by ' joined the game'
    # The -o option for grep only prints the matching part of the line.
    # The -h option for zgrep suppresses filenames in the output.
    # The -E option for zgrep enables extended regular expressions.
    # The -e option for date specifies the input format.
    while read -r line; do
        if [[ $line =~ ^\[[0-9]{2}:[0-9]{2}:[0-9]{2}\] ]]; then
            time=${line:1:8}
            timestamp=$(date -d "$(date -r "$file" +%Y-%m-%d) $time" +%s)
            formatted_timestamp=$(date -d "@$timestamp" "+%Y-%m-%d %H:%M:%S")
            name=$(echo "$line" | grep -oE '[[:alnum:]_]+ joined the game' | awk '{print $1}')
            player_counts["$name"]=$(( player_counts["$name"] + 1 ))
            player_timestamps["$name"]=$timestamp
            player_formatted_timestamps["$name"]=$formatted_timestamp
        fi
    done < <(zcat "$file" | grep -E '[[:alnum:]_]+ joined the game')

done

# Format the player names, counts, and most recent join times into a table
formatted_names=()
for name in "${!player_counts[@]}"; do
    count="${player_counts[$name]}"
    timestamp="${player_timestamps[$name]}"
    formatted_timestamp="${player_formatted_timestamps[$name]}"
    formatted_names+=("$name|$count|$formatted_timestamp")
done

# Print the table header
echo "Player Name     | Count | Timestamp (YYYY-MM-DD HH:MM:SS) | Timestamp (Unix epoch)"

# Print the formatted player names, counts, and most recent join times in a table
for name in "${formatted_names[@]}"; do
    echo "$name|$timestamp"
done